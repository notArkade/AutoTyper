#include <iostream>
#include <string>
#include <unordered_set>

using namespace std;

struct Node {
    string location;
    Node* next;
};

int main() {
    int N;
    cin >> N;

    Node* head = nullptr;
    Node* tail = nullptr;
    for (int i = 0; i < N; i++) {
        string location;
        cin >> location;
        Node* node = new Node();
        node->location = location;
        node->next = nullptr;
        if (head == nullptr) {
            head = node;
            tail = node;
        } else {
            tail->next = node;
            tail = node;
        }
    }

    string loopLocation;
    cin >> loopLocation;
    if (loopLocation != "none") {
        Node* temp = head;
        while (temp->next != nullptr) {
            temp = temp->next;
        }
        temp->next = head;
        for (Node* curr = head; curr != nullptr; curr = curr->next) {
            if (curr->location == loopLocation) {
                temp->next = curr;
                break;
            }
        }
    }

    unordered_set<Node*> visited;
    Node* curr = head;
    while (curr != nullptr) {
        if (visited.find(curr) != visited.end()) {
            cout << "Loop detected" << endl;
            return 0;
        }
        visited.insert(curr);
        curr = curr->next;
    }
    cout << "No loop detected" << endl;
    return 0;
}
