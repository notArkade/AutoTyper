#include <bits/stdc++.h>
using namespace std;

struct Node {
    string data;
    Node* next;
};

bool detectLoop(Node* head) {
    Node* slow = head;
    Node* fast = head;
    while (slow && fast && fast->next) {
        slow = slow->next;
        fast = fast->next->next;
        if (slow == fast) {
            return true;
        }
    }
    return false;
}

Node* createLinkedList(int n, vector<string>& locations, string loopLocation) {
    Node* head = new Node{locations[0], nullptr};
    Node* tail = head;
    Node* loopNode = nullptr;
    for (int i = 1; i < n; i++) {
        Node* newNode = new Node{locations[i], nullptr};
        tail->next = newNode;
        tail = newNode;
        if (locations[i] == loopLocation) {
            loopNode = newNode;
        }
    }
    if (loopLocation != "none") {
        tail->next = loopNode;
    }
    return head;
}

int main() {
    int n;
    cin >> n;
    vector<string> locations(n);
    for (int i = 0; i < n; i++) {
        cin >> locations[i];
    }
    string loopLocation;
    cin >> loopLocation;
    Node* head = createLinkedList(n, locations, loopLocation);
    if (detectLoop(head)) {
        cout << "Loop detected" << endl;
    } else {
        cout << "No loop detected" << endl;
    }
    return 0;
}
